package me.neoblade298.neorogue.equipment.abilities;

import org.bukkit.Material;
import org.bukkit.entity.Player;

import me.neoblade298.neorogue.equipment.Equipment;
import me.neoblade298.neorogue.equipment.EquipmentProperties;
import me.neoblade298.neorogue.equipment.Rarity;
import me.neoblade298.neorogue.equipment.StandardPriorityAction;
import me.neoblade298.neorogue.player.inventory.GlossaryTag;
import me.neoblade298.neorogue.session.fight.DamageCategory;
import me.neoblade298.neorogue.session.fight.PlayerFightData;
import me.neoblade298.neorogue.session.fight.buff.Buff;
import me.neoblade298.neorogue.session.fight.buff.DamageBuffType;
import me.neoblade298.neorogue.session.fight.status.Status.StatusType;
import me.neoblade298.neorogue.session.fight.trigger.Trigger;
import me.neoblade298.neorogue.session.fight.trigger.TriggerResult;
import me.neoblade298.neorogue.session.fight.trigger.event.PreApplyStatusEvent;

public class ExploitWeakness extends Equipment {
	private static final String ID = "exploitWeakness";
	private int strength;
	private static final int CUTOFF = 30;
	
	public ExploitWeakness(boolean isUpgraded) {
		super(ID, "Exploit Weakness", isUpgraded, Rarity.UNCOMMON, EquipmentClass.WARRIOR,
				EquipmentType.ABILITY, EquipmentProperties.none());
		
		strength = isUpgraded ? 3 : 2;
	}
	
	public static Equipment get() {
		return Equipment.get(ID, false);
	}

	@Override
	public void initialize(Player p, PlayerFightData data, Trigger bind, EquipSlot es, int slot) {
		StandardPriorityAction inst = new StandardPriorityAction(ID);
		inst.setAction((pdata, in) -> {
			PreApplyStatusEvent ev = (PreApplyStatusEvent) in;
			if (!ev.getStatusId().equals(StatusType.CONCUSSED.name())) return TriggerResult.keep();
			inst.addCount(ev.getStacks());
			
			int num = inst.getCount() / CUTOFF;
			data.addDamageBuff(DamageBuffType.of(DamageCategory.EARTHEN), new Buff(data, 0, strength * num * 0.01));
			inst.setCount(inst.getCount() % CUTOFF);
			return TriggerResult.keep();
		});
		data.addTrigger(id, Trigger.PRE_APPLY_STATUS, inst);
	}

	@Override
	public void setupItem() {
		item = createItem(Material.SPYGLASS,
				"Passive. For every " + GlossaryTag.CONCUSSED.tag(this, CUTOFF, false) + " you apply, increase your " + GlossaryTag.EARTHEN.tag(this) +
				" damage by <yellow>" + strength + "%</yellow>.");
	}
}
